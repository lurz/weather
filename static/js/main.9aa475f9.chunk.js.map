{"version":3,"sources":["images/wicons sync /^/.//.*/.svg$","images/wicons/cloudy-day-1.svg","images/wicons/cloudy-day-2.svg","images/wicons/cloudy-day-3.svg","images/wicons/cloudy-night-1.svg","images/wicons/cloudy-night-2.svg","images/wicons/cloudy-night-3.svg","images/wicons/cloudy.svg","images/wicons/day.svg","images/wicons/night.svg","images/wicons/rainy-1.svg","images/wicons/rainy-2.svg","images/wicons/rainy-3.svg","images/wicons/rainy-4.svg","images/wicons/rainy-5.svg","images/wicons/rainy-6.svg","images/wicons/rainy-7.svg","images/wicons/snowy-1.svg","images/wicons/snowy-2.svg","images/wicons/snowy-3.svg","images/wicons/snowy-4.svg","images/wicons/snowy-5.svg","images/wicons/snowy-6.svg","images/wicons/thunder.svg","images/wicons/weather-sprite.svg","images/wicons/weather.svg","images/wicons/weather_sagittarius.svg","images/wicons/weather_sunset.svg","actions/index.js","reducers/index.js","components/Card.js","components/FiveDay.js","containers/App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","invalidateWeather","cityName","type","requestWeather","getWeathers","data","cond","options","weekday","month","day","five","i","one","current","dt","Date","toLocaleString","Math","round","main","temp","weather","push","fetchWeather","dispatch","fetch","then","response","json","weathers","list","getCityName","city","name","getCountryName","country","receivedAt","now","receiveWeather","fetchWeatherIfNeeded","getState","state","weatherByCity","hasOwnProperty","isFetching","didInvalidate","shouldFetchWeather","items","action","lastUpdated","rootReducer","combineReducers","selectedCity","enteredCity","content","toLowerCase","Card","className","src","require","alt","protoTypes","PropTypes","string","isRequired","number","FiveDay","handleRefresh","toLocaleTimeString","onClick","w","array","func","App","preventDefault","props","this","prevProps","console","log","target","value","cityList","navBars","forEach","c","handleClick","onSubmit","handleSubmit","onChange","handleChange","Component","connect","middleware","thunk","store","createStore","reducer","applyMiddleware","render","document","getElementById"],"mappings":"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","file":"static/js/main.9aa475f9.chunk.js","sourcesContent":["var map = {\n\t\"./cloudy-day-1.svg\": 31,\n\t\"./cloudy-day-2.svg\": 32,\n\t\"./cloudy-day-3.svg\": 33,\n\t\"./cloudy-night-1.svg\": 34,\n\t\"./cloudy-night-2.svg\": 35,\n\t\"./cloudy-night-3.svg\": 36,\n\t\"./cloudy.svg\": 37,\n\t\"./day.svg\": 38,\n\t\"./night.svg\": 39,\n\t\"./rainy-1.svg\": 40,\n\t\"./rainy-2.svg\": 41,\n\t\"./rainy-3.svg\": 42,\n\t\"./rainy-4.svg\": 43,\n\t\"./rainy-5.svg\": 44,\n\t\"./rainy-6.svg\": 45,\n\t\"./rainy-7.svg\": 46,\n\t\"./snowy-1.svg\": 47,\n\t\"./snowy-2.svg\": 48,\n\t\"./snowy-3.svg\": 49,\n\t\"./snowy-4.svg\": 50,\n\t\"./snowy-5.svg\": 51,\n\t\"./snowy-6.svg\": 52,\n\t\"./thunder.svg\": 53,\n\t\"./weather-sprite.svg\": 54,\n\t\"./weather.svg\": 55,\n\t\"./weather_sagittarius.svg\": 56,\n\t\"./weather_sunset.svg\": 57\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-1.80a5d865.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-2.b931d84d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-day-3.109368f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-1.7e65840b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-2.ef1c6aa1.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy-night-3.bf91ac0f.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.ad789581.svg\";","module.exports = __webpack_public_path__ + \"static/media/day.7f93fbdb.svg\";","module.exports = __webpack_public_path__ + \"static/media/night.a3f3f38d.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-1.f134a51c.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-2.35eb268d.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-3.c17e7a5d.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-4.c8cdb216.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-5.2bd23641.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-6.d235ab65.svg\";","module.exports = __webpack_public_path__ + \"static/media/rainy-7.c915395f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-1.f78cba60.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-2.d103c77c.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-3.b6eea2cf.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-4.474b6da7.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-5.3def7c9f.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowy-6.67d63a14.svg\";","module.exports = __webpack_public_path__ + \"static/media/thunder.7142c78b.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather-sprite.2738019d.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather.56c46d80.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_sagittarius.166882bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/weather_sunset.cf01f54e.svg\";","export const REQUEST_WEATHER = 'REQUEST_WEATHER'\nexport const RECEIVE_WEATHER = 'RECEIVE_WEATHER'\nexport const SELECT_CITY = 'SELECT_CITY'\nexport const SEARCH_CITY = 'SEARCH_CITY'\nexport const ENTER_CITY = 'ENTER_CITY'\nexport const INVALIDATE_WEATHER = 'INVALIDATE_WEATHER'\n\nexport const selectCity = cityName => ({\n    type: SELECT_CITY,\n    cityName\n})\n\nexport const searchCity = cityName => ({\n    type: SEARCH_CITY,\n    cityName\n})\n\nexport const enterCity = content => ({\n    type: ENTER_CITY,\n    content\n})\n\nexport const invalidateWeather = cityName => ({\n    type: INVALIDATE_WEATHER,\n    cityName\n})\n\nexport const requestWeather = cityName => ({\n    type: REQUEST_WEATHER,\n    cityName\n})\n\nfunction wIcon(cond){\n    let result;\n    if( cond >= 200 && cond < 300 ){\n        result = \"thunder\";\n    }else if(cond < 500){\n        result = \"rainy-4\";\n    }else if(cond < 600){\n        result = \"rainy-6\";\n    }else if(cond < 700){\n        result = \"snowy-5\";\n    }else if(cond < 800){\n        result = \"cloudy-day-1\";\n    }else if(cond === 800){\n        result = \"day\";\n    }else{\n        result = \"cloudy\";\n    }\n    return result;\n}\n\nfunction getWeathers(data) {\n    const options = { weekday: 'short', month: 'short', day: '2-digit' };\n    let five = [];\n    for(let i in data){\n        if(i % 8 === 0){\n            let one = {};\n            let current = data[i];\n            let dt = new Date(current.dt * 1000);\n            one[\"dt\"] = dt.toLocaleString('en-US', options);\n            one[\"temp\"] = Math.round(current.main.temp);\n            one[\"cond\"] = wIcon(current.weather[0].id);\n            five.push(one);\n        }\n    }\n    return five;\n}\n\nexport const receiveWeather = (cityName, json) => ({\n    type: RECEIVE_WEATHER,\n    cityName,\n    weathers: getWeathers(json.list),\n    getCityName: json.city.name,\n    getCountryName: json.city.country,\n    receivedAt: Date.now()\n})\n\nconst fetchWeather = cityName => dispatch => {\n    dispatch(requestWeather);\n    return fetch(`https://api.openweathermap.org/data/2.5/forecast?units=metric&q=${cityName}&appid=312b1bac995abc93b80f070e12bc0b95`)\n        .then(response => response.json())\n        .then(json => { dispatch(receiveWeather(cityName, json)) })\n}\n\nconst shouldFetchWeather = (state, cityName) => {\n    // if(!state.weathersByCity){\n    //     console.log('not state');\n    //     return true;\n    // }\n    // console.log(state);\n    // const weathers = state.weathersByCity[cityName];\n    // if (!weathers){\n    //     console.log('not weather');\n    //     return true;\n    // }\n    // if (weathers.isFetching) {\n    //     console.log('is fetching');\n    //     return false;\n    // }\n    // console.log('invalidate');\n    // return weathers.didInvalidate;\n    if(state.weatherByCity.hasOwnProperty(cityName)){\n        // console.log(cityName);\n        const weathers = state.weatherByCity[cityName];\n        if (weathers.isFetching) {\n            return false;\n        }\n        return weathers.didInvalidate;\n    }\n    return true;\n}\n\nexport const fetchWeatherIfNeeded = cityName => (dispatch, getState) => {\n    if (shouldFetchWeather(getState(), cityName)){\n        return dispatch(fetchWeather(cityName));\n    }\n}","import { combineReducers } from 'redux'\nimport {\n  SEARCH_CITY, SELECT_CITY, ENTER_CITY, INVALIDATE_WEATHER, RECEIVE_WEATHER, REQUEST_WEATHER\n} from '../actions'\n\nconst selectedCity = (state = 'ann arbor', action) => {\n    switch (action.type) {\n        case SELECT_CITY:\n        case SEARCH_CITY:\n            return action.cityName\n        default:\n            return state\n    }\n}\n\nconst enteredCity = (state = '', action) => {\n    switch (action.type) {\n        case ENTER_CITY:\n            return action.content.toLowerCase()\n        default:\n            return state\n    }\n}\n\nconst weathers = (state = {isFetching: false, didInvalidate: false, items:[]}, action) => {\n    switch (action.type) {\n        case INVALIDATE_WEATHER:\n            return {\n                ...state,\n                didInvalidate: true\n            }\n        case REQUEST_WEATHER:\n            return {\n                ...state,\n                didInvalidate: false,\n                isFetching: true\n            }\n        case RECEIVE_WEATHER:\n            return {\n                ...state,\n                didInvalidate: false,\n                isFetching: false,\n                lastUpdated: action.receivedAt,\n                items: action.weathers,\n                getCityName: action.getCityName,\n                getCountryName: action.getCountryName\n            }\n        default:\n            return state\n    }\n}\n\nconst weatherByCity = (state = { }, action) => {\n    switch (action.type) {\n        case INVALIDATE_WEATHER:\n        case REQUEST_WEATHER:\n        case RECEIVE_WEATHER:\n            return {\n                ...state,\n                [action.cityName]: weathers(state[action.cityName], action)\n            }\n        default:\n            return state\n    }\n}\n\nconst rootReducer = combineReducers({\n    selectedCity,\n    enteredCity,\n    weatherByCity\n})\n\nexport default rootReducer\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Card = ({cond, temp, dt}) => (\n    <div className=\"weather-card\">\n        <div className=\"weather-icon\">\n            <img src={require(\"../images/wicons/\" + cond + \".svg\")} alt=\"icon\" />\n        </div>\n        <h1>{temp}º</h1>\n        <p>{dt}</p>\n    </div>\n)\n\nCard.protoTypes = {\n    cond: PropTypes.string.isRequired,\n    temp: PropTypes.number.isRequired,\n    dt: PropTypes.string.isRequired\n}\n\nexport default Card\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Card from './Card'\n\nconst FiveDay = ({weathers, getCityName, getCountryName, lastUpdated, handleRefresh}) => (\n    <div className=\"weather-large\">\n        <div className=\"weather-header\">\n            <h1>{getCityName}, {getCountryName} </h1>\n            <span>Last Updated: {new Date(lastUpdated).toLocaleTimeString()}</span>\n            <button className=\"refresh\" onClick={(e) => handleRefresh(e)}> <i className=\"fa fa-refresh fa-spin fa-2x fa-fw\"></i></button>\n        </div>\n        <div className=\"weather-wrapper\">\n            {weathers.map(w => (<Card dt={w.dt} temp={w.temp} cond={w.cond} />))}\n        </div>\n    </div>\n   \n)\n\nFiveDay.protoTypes = {\n    weathers: PropTypes.array.isRequired,\n    getCityName: PropTypes.string.isRequired,\n    getCountryName: PropTypes.string.isRequired,\n    handleRefresh: PropTypes.func.isRequired\n}\n\nexport default FiveDay","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { selectCity, searchCity, enterCity, fetchWeatherIfNeeded, invalidateWeather } from '../actions'\nimport '../style/weather.css'\n// import cityData from '../images/city.list.json'\nimport FiveDay from '../components/FiveDay'\n\n\nclass App extends Component {\n    static propTypes = {\n        selectedCity: PropTypes.string.isRequired,\n        enteredCity: PropTypes.string.isRequired,\n        weathers: PropTypes.array.isRequired,\n        cityList: PropTypes.array.isRequired,\n        isFetching: PropTypes.bool.isRequired,\n        lastUpdated: PropTypes.number,\n        getCityName: PropTypes.string.isRequired,\n        getCountryName: PropTypes.string.isRequired,\n        dispatch: PropTypes.func.isRequired\n    }\n\n    componentDidMount() {\n        const {dispatch, selectedCity} = this.props;\n        dispatch(fetchWeatherIfNeeded(selectedCity));\n    }\n\n    componentDidUpdate(prevProps) {\n        if(prevProps.selectedCity !== this.props.selectedCity){\n            const {dispatch, selectedCity} = this.props;\n            dispatch(fetchWeatherIfNeeded(selectedCity));\n        }\n    }\n\n    handleClick(e){\n        console.log(e.target.value);\n        this.props.dispatch(selectCity(e.target.value));     \n    }\n\n    handleSubmit(e){\n        e.preventDefault();\n        const {dispatch, enteredCity} = this.props;\n        dispatch(searchCity(enteredCity));\n        dispatch(fetchWeatherIfNeeded(this.props.selectedCity));\n    }\n\n    handleChange(e) {\n        this.props.dispatch(enterCity(e.target.value));\n    }\n\n    handleRefresh = (e) => {\n        e.preventDefault();\n        const {dispatch, selectedCity} = this.props;\n        dispatch(invalidateWeather(selectedCity));\n        dispatch(fetchWeatherIfNeeded(selectedCity)); \n    }\n\n    render(){\n        const {weathers, getCityName, getCountryName, cityList, lastUpdated, isFetching} = this.props;\n        const navBars = [];\n        cityList.forEach((c) => {\n            navBars.push(<li><button onClick={(e) => this.handleClick(e)} value={c} >{c}</button></li>);\n        });\n        \n        return (\n        <div>\n            <div className=\"header-content\">\n                <nav className=\"header-nav-wrap\">\n                        <ul className=\"header-nav\">\n                            <li><button>My Weather</button></li>\n                            {navBars}\n                            <div className=\"search-container\">\n                                <form onSubmit={(e) => this.handleSubmit(e)}>\n                                <input type=\"text\" value={this.props.enteredCity} onChange={(e) => this.handleChange(e)}></input>\n                                <button type=\"submit\"><i className=\"fa fa-search\"></i></button>\n                                </form>\n                            </div>\n                        </ul>\n                </nav>\n            </div>\n            {isFetching ? \n                <i className=\"loading fa fa-spinner fa-spin fa-3x fa-fw\"></i> : \n                <FiveDay weathers={weathers} getCityName={getCityName} getCountryName={getCountryName} lastUpdated={lastUpdated} handleRefresh={this.handleRefresh} />}\n            \n        </div>\n        \n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    const {selectedCity, enteredCity, weatherByCity} = state;\n    const {isFetching, lastUpdated, items: weathers, getCityName, getCountryName} = weatherByCity[selectedCity] || {isFetching: true, items: [], getCityName: '', getCountryName: ''};\n    const cityList = Object.keys(weatherByCity);\n\n\n    return {\n        selectedCity,\n        enteredCity,\n        weathers,\n        isFetching,\n        lastUpdated,\n        getCityName,\n        getCountryName,\n        cityList\n    };\n}\n\nexport default connect(mapStateToProps)(App)\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { createStore, applyMiddleware } from 'redux'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { createLogger } from 'redux-logger'\nimport reducer from './reducers'\nimport App from './containers/App'\n\n\nconst middleware = [ thunk ]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(...middleware)\n)\n\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}